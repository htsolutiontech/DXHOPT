import React, { useState } from 'react';
import { NavLink, useNavigate } from 'react-router-dom';
import { IconButton } from '@material-ui/core';
import { Layout, Menu, Avatar, message } from 'antd';
import {
  AppstoreOutlined,
  InboxOutlined,
  SolutionOutlined,
  TeamOutlined,
  UserOutlined,
  FileTextOutlined,
  ShopOutlined,
  DownloadOutlined,
  UploadOutlined,
  DatabaseOutlined,
  ShoppingCartOutlined,
  BarChartOutlined,
  PieChartOutlined,
  UserAddOutlined,
  DollarOutlined,
  SmileOutlined,
  SettingOutlined,
  SafetyCertificateOutlined,
  HistoryOutlined,
  MonitorOutlined,
  CloudSyncOutlined,
  LockOutlined,
  FileSearchOutlined,
} from '@ant-design/icons';
import './layout.css';

const { Header, Content, Footer } = Layout;
const { SubMenu } = Menu;

const showComingSoon = () => {
  message.info("üéâ T√≠nh nƒÉng n√†y ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn nha! B·∫°n quay l·∫°i sau nh√© üòâ");
};

function LayoutApp(props) {
  const { children, menuType } = props;
  const navigation = useNavigate();
  const [current, setCurrent] = useState('mail');

  const handleClick = (event) => setCurrent(event.key);

  const handleLogout = () => {
    localStorage.removeItem('token');
    localStorage.removeItem('userId');
    navigation('/');
  };

  // ========== MENU PH√ÇN H·ªÜ ==========
  let menuItems = [];

  // --- Warehouse ---
  if (menuType === "warehouse") {
    menuItems = [
      <Menu.Item key="dashboard" icon={<AppstoreOutlined />}>
        <NavLink to="/home">Trang ch·ªß</NavLink>
      </Menu.Item>,
      <Menu.Item key="warehouse" icon={<InboxOutlined />} disabled>
        Kho h√†ng
      </Menu.Item>,
      <SubMenu
        key="suppliers"
        icon={<SolutionOutlined />}
        title="Nh√† Cung C·∫•p"
        onTitleClick={() => navigation('/system/warehouse/suppliers')}
      >
        <Menu.Item key="/suppliers"><NavLink to="/system/warehouse/suppliers">Danh s√°ch nh√† cung c·∫•p</NavLink></Menu.Item>
        <Menu.Item key="/new_supplier" disabled>Nh√† cung c·∫•p m·ªõi</Menu.Item>
      </SubMenu>,
      <SubMenu
        key="products"
        icon={<ShopOutlined />}
        title="H√†ng H√≥a"
        onTitleClick={() => navigation('/system/warehouse/products')}
      >
        <Menu.Item key="/product_types"><NavLink to="/system/warehouse/product_type">Lo·∫°i h√†ng</NavLink></Menu.Item>
        <Menu.Item key="/products"><NavLink to="/system/warehouse/products">Danh m·ª•c h√†ng h√≥a</NavLink></Menu.Item>
        <Menu.Item key="/product_images" disabled>·∫¢nh h√†ng h√≥a</Menu.Item>
      </SubMenu>,
      <SubMenu
        key="stock_in"
        icon={<DownloadOutlined />}
        title="Nh·∫≠p Kho"
        onTitleClick={() => navigation('/system/warehouse/stock_in')}
      >
        <Menu.Item key="/stock_in"><NavLink to="/system/warehouse/stock_in">Nh·∫≠p h√†ng</NavLink></Menu.Item>
        <Menu.Item key="/stock_in_with_month"><NavLink to="/system/warehouse/stock_in_with_month">Th·ªëng k√™ h√†ng nh·∫≠p theo th√°ng</NavLink></Menu.Item>
      </SubMenu>,
      <SubMenu
        key="stock_out"
        icon={<UploadOutlined />}
        title="Xu·∫•t Kho"
        onTitleClick={() => navigation('/system/warehouse/stock_out')}
      >
        <Menu.Item key="/stock_out"><NavLink to="/system/warehouse/stock_out">Xu·∫•t h√†ng</NavLink></Menu.Item>
        <Menu.Item key="/stock_out_with_month"><NavLink to="/system/warehouse/stock_out_with_month">Th·ªëng k√™ h√†ng xu·∫•t theo th√°ng</NavLink></Menu.Item>
        <Menu.Item key="/stock_out_with_customer"><NavLink to="/system/warehouse/stock_out_with_customer">Th·ªëng k√™ h√†ng xu·∫•t theo kh√°ch h√†ng</NavLink></Menu.Item>
      </SubMenu>,
      <SubMenu
        key="inventory"
        icon={<DatabaseOutlined />}
        title="T·ªìn Kho"
        onTitleClick={() => navigation('/system/warehouse/inventory')}
      >
        <Menu.Item key="/inventory_check" disabled>Ki·ªÉm k√™ kho</Menu.Item>
        <Menu.Item key="/inventory"><NavLink to="/system/warehouse/inventory">T·ªìn kho</NavLink></Menu.Item>
        <Menu.Item key="/inventory_with_month"><NavLink to="/system/warehouse/inventory_with_month">Th·ªëng k√™ h√†ng nh·∫≠p v√† xu·∫•t theo th√°ng</NavLink></Menu.Item>
      </SubMenu>,
      <SubMenu
        key="order"
        icon={<ShoppingCartOutlined />}
        title="ƒê·∫∑t H√†ng"
        onTitleClick={() => navigation('/system/warehouse/order_detail')}
      >
        <Menu.Item key="/order"><NavLink to="/system/warehouse/order">ƒê∆°n h√†ng</NavLink></Menu.Item>
        <Menu.Item key="/order_detail"><NavLink to="/system/warehouse/order_detail">Chi ti·∫øt ƒë∆°n h√†ng</NavLink></Menu.Item>
        <Menu.Item key="/order_detail_with_month"><NavLink to="/system/warehouse/order_detail_with_month">Th·ªëng k√™ h√†ng ƒë·∫∑t theo th√°ng</NavLink></Menu.Item>
        <Menu.Item key="/order_detail_with_customer"><NavLink to="/system/warehouse/order_detail_with_customer">Th·ªëng k√™ h√†ng ƒë·∫∑t theo kh√°ch h√†ng</NavLink></Menu.Item>
      </SubMenu>,
      <Menu.Item key="/report_warehouse" icon={<BarChartOutlined />} disabled>
        B√°o c√°o Kho H√†ng
      </Menu.Item>,
      <SubMenu
        key="user"
        icon={
          <IconButton aria-label="user">
            <Avatar size="large" icon={<UserOutlined />} />
          </IconButton>
        }
      >
        <Menu.Item key="logout" onClick={handleLogout}>Log out</Menu.Item>
      </SubMenu>
    ];
  }

  // --- CRM ---
  else if (menuType === "crm") {
    menuItems = [
      <Menu.Item key="dashboard" icon={<AppstoreOutlined />}>
        <NavLink to="/home">Trang ch·ªß</NavLink>
      </Menu.Item>,
      <SubMenu
        key="customers"
        icon={<TeamOutlined />}
        title="Kh√°ch H√†ng"
        onTitleClick={() => navigation('/system/crm/customers')}
      >
        <Menu.Item key="/customers"><NavLink to="/system/crm/customers">Kh√°ch h√†ng</NavLink></Menu.Item>
        <Menu.Item key="new_customer" disabled>Kh√°ch h√†ng m·ªõi</Menu.Item>
        <Menu.Item key="by_city" disabled>Th·ªëng k√™ KH theo t·ªânh th√†nh</Menu.Item>
        <Menu.Item key="by_staff" disabled>Th·ªëng k√™ KH theo ng∆∞·ªùi ph·ª• tr√°ch</Menu.Item>
        <Menu.Item key="competitor" disabled>ƒê·ªëi th·ªß m·ªõi</Menu.Item>
      </SubMenu>,
      <SubMenu
        key="contracts"
        icon={<FileTextOutlined />}
        title="Ch·ª©ng T·ª´"
        onTitleClick={() => navigation('/system/crm/contracts')}
      >
        <Menu.Item key="/contract_types"><NavLink to="/system/crm/contract_type">Lo·∫°i h·ª£p ƒë·ªìng</NavLink></Menu.Item>
        <Menu.Item key="/contracts"><NavLink to="/system/crm/contracts">H·ª£p ƒê·ªìng</NavLink></Menu.Item>
        <Menu.Item key="/bill"><NavLink to="/system/crm/bill">Bill</NavLink></Menu.Item>
      </SubMenu>,
      <SubMenu
        key="quotations"
        icon={<DollarOutlined />}
        title="B√°o Gi√°"
        onTitleClick={() => navigation('/system/crm/quotations')}
      >
        <Menu.Item key="/quotation_status"><NavLink to="/system/crm/quotation_status">Tr·∫°ng th√°i b√°o gi√°</NavLink></Menu.Item>
        <Menu.Item key="/quotation_type"><NavLink to="/system/crm/quotation_type">Lo·∫°i b√°o gi√°</NavLink></Menu.Item>
        <Menu.Item key="/quotations"><NavLink to="/system/crm/quotations">B√°o gi√°</NavLink></Menu.Item>
        <Menu.Item key="/quotation_detail"><NavLink to="/system/crm/quotation_detail">Chi ti·∫øt b√°o gi√°</NavLink></Menu.Item>
      </SubMenu>,
      <SubMenu
        key="potential_customer"
        icon={<UserAddOutlined />}
        title="Kh√°ch H√†ng Ti·ªÅm NƒÉng"
        onTitleClick={() => navigation('/system/crm/potential_customer')}
      >
        <Menu.Item key="/opportunity_source"><NavLink to="/system/crm/opportunity_source">Ngu·ªìn c∆° h·ªôi</NavLink></Menu.Item>
        <Menu.Item key="/customer_group"><NavLink to="/system/crm/customer_group">Nh√≥m kh√°ch h√†ng</NavLink></Menu.Item>
        <Menu.Item key="/potential_customer" disabled>Kh√°ch h√†ng ti·ªÅm nƒÉng</Menu.Item>
      </SubMenu>,
      <SubMenu
        key="customer_interactions"
        icon={<SmileOutlined />}
        title="ChƒÉm s√≥c kh√°ch h√†ng"
        disabled
      >
        <Menu.Item key="/interaction_type" disabled>Lo·∫°i t∆∞∆°ng t√°c</Menu.Item>
        <Menu.Item key="/customer_interactions" disabled>ChƒÉm s√≥c kh√°ch h√†ng</Menu.Item>
      </SubMenu>,
      <Menu.Item key="crm_report" icon={<PieChartOutlined />} disabled>
        B√°o c√°o doanh thu
      </Menu.Item>,
      <SubMenu
        key="user"
        icon={
          <IconButton aria-label="user">
            <Avatar size="large" icon={<UserOutlined />} />
          </IconButton>
        }
      >
        <Menu.Item key="logout" onClick={handleLogout}>Log out</Menu.Item>
      </SubMenu>
    ];
  }

  // --- Admin ---
  else if (menuType === "admin") {
    menuItems = [
      <Menu.Item key="dashboard" icon={<AppstoreOutlined />}>
        <NavLink to="/home">Trang ch·ªß</NavLink>
      </Menu.Item>,
      <Menu.Item key="/login_history" icon={<HistoryOutlined />}>
        <NavLink to="/system/admin/login_history">L·ªãch s·ª≠ ƒëƒÉng nh·∫≠p</NavLink>
      </Menu.Item>,
      <SubMenu
        key="accounts"
        icon={<UserOutlined />}
        title="T√†i kho·∫£n & Ph√¢n quy·ªÅn"
        onTitleClick={() => navigation('/system/admin/accounts')}
      >
        <Menu.Item key="/accounts"><NavLink to="/system/admin/accounts">T√†i kho·∫£n</NavLink></Menu.Item>
        <Menu.Item key="/system_settings/roles"><NavLink to="/system/admin/role">Vai tr√≤</NavLink></Menu.Item>
        <Menu.Item key="/system_settings/permissions" disabled>Ph√¢n quy·ªÅn</Menu.Item>
        <Menu.Item key="/system_settings/lock" disabled>Kh√≥a t√†i kho·∫£n</Menu.Item>
      </SubMenu>,
      <Menu.Item key="/system/activity-logs" icon={<FileSearchOutlined />} disabled>
        Nh·∫≠t k√Ω ho·∫°t ƒë·ªông
      </Menu.Item>,
      <SubMenu
        key="system_security"
        icon={<SafetyCertificateOutlined />}
        title="B·∫£o m·∫≠t h·ªá th·ªëng"
        disabled
      >
        <Menu.Item key="/system_security/password_policy" disabled>Ch√≠nh s√°ch m·∫≠t kh·∫©u</Menu.Item>
        <Menu.Item key="/system_security/access_control" disabled>Ki·ªÉm so√°t truy c·∫≠p</Menu.Item>
      </SubMenu>,
      <Menu.Item key="/system/backup" icon={<CloudSyncOutlined />} disabled>
        Sao l∆∞u & Ph·ª•c h·ªìi
      </Menu.Item>,
      <Menu.Item key="/system/monitoring" icon={<MonitorOutlined />} disabled>
        Gi√°m s√°t h·ªá th·ªëng
      </Menu.Item>,
      <SubMenu
        key="user"
        icon={
          <IconButton aria-label="user">
            <Avatar size="large" icon={<UserOutlined />} />
          </IconButton>
        }
      >
        <Menu.Item key="logout" onClick={handleLogout}>Log out</Menu.Item>
      </SubMenu>
    ];
  }

  // ========== GIAO DI·ªÜN ==========
  return (
    <Layout style={{ minHeight: '100vh' }}>
      <Header className="site-layout-background" style={{ padding: 0, position: 'sticky', top: 0, zIndex: 1 }}>
        <div
          style={{
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
            padding: '0 20px',
          }}
        >
          <div className="logo" style={{ color: '#fff', fontSize: '20px', fontWeight: 'bold' }}>
            <a href="https://hoangphucthanh.vn/" style={{ color: '#fff', textDecoration: 'none' }}>
              HOPT.DX
            </a>
          </div>
          <Menu
            onClick={handleClick}
            selectedKeys={[current]}
            mode="horizontal"
            className="header-menu"
          >
            {menuItems}
          </Menu>
        </div>
      </Header>
      <Layout className="site-layout">
        <Content style={{ margin: '24px 16px' }}>
          <div className="site-layout-background" style={{ padding: 24, minHeight: 360 }}>
            {children}
          </div>
        </Content>
        <Footer style={{ textAlign: 'center' }}>
          <h3>Warehouse</h3>
        </Footer>
      </Layout>
    </Layout>
  );
}

export default LayoutApp;